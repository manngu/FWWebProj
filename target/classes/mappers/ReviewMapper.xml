<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
 <mapper namespace="com.fw.shopping.review.repository.IReviewMapper">
    
		<resultMap id="ReviewMap" type="com.fw.shopping.review.model.ReviewVO">
			<id property="reviewNo" column="review_no"/>
			<result property="gdsNo" column="gds_no"/>
			<result property="orderId" column="order_id"/>
			<result property="userNo" column="user_no"/>
			<result property="reviewRef" column="review_ref"/>
			<result property="reviewImg" column="review_img"/>
			<result property="reviewContent" column="review_content"/>
			<result property="reviewStars" column="review_stars"/>
			<result property="reviewRegDate" column="review_reg_date"/>
		</resultMap>
		
		<insert id="addReview">
			INSERT INTO review_tb
			(gds_no, order_id, user_no, review_ref, review_img, review_content, review_stars)
			VALUES (#{gdsNo}, #{orderId}, #{userNo}, #{reviewRef}, #{reviewImg}, #{reviewContent}, #{reviewStars})
		</insert>
		
		<insert id="addReReview">
			INSERT INTO review_tb
			(gds_no, order_id, user_no, review_ref, review_content)
			VALUES (#{gdsNo}, #{orderId}, #{userNo}, #{reviewRef}, #{reviewContent})
		</insert>
		
		<update id="modifyReview">
			UPDATE review_tb
			SET review_img=#{reviewImg}, review_content=#{reviewContent}, review_stars=#{reviewStars}
			WHERE review_no = #{reviewNo}
		</update>
		
		<update id="modifyReReview">
			UPDATE review_tb
			SET review_content=#{reviewContent}
			WHERE review_no = #{reviewNo}
		
		</update>
		
		<delete id="deleteReview">
			DELETE FROM review_tb
			WHERE review_no=#{reviewNo}
		</delete>
		
		<select id="getReviewList" resultMap="ReviewMap">
			SELECT * FROM review_tb
			WHERE gds_no=#{gdsNo} and review_ref is null
		</select>
		
		<select id="getReReviewList" resultMap="ReviewMap">
			SELECT * FROM review_tb
			WHERE gds_no=#{gdsNo} and review_ref is not null
		</select>
		
		<select id="getReviewInfo" resultMap="ReviewMap">
			SELECT *
			FROM review_tb
			WHERE review_no=#{reviewNo}
		</select>

		<select id="getMyReviewList" resultMap="ReviewMap">
			SELECT *
			FROM review_tb
			WHERE user_no=#{userNo}
		</select>
	
		<select id="getMemberName" resultType="String">
			select user_name
			from review_tb
			join `shopping_mall`.`member_tb` 
			on member_tb.user_no = review_tb.user_no
			where review_tb.review_no=#{reviewNo};
		</select>
		
		<select id="getMyReReviewList" resultMap="ReviewMap">
			SELECT *
			FROM review_tb
			WHERE review_ref is not null AND review_ref=#{reviewNo}
		</select>

	<!-- 관리자가 댓글을 달아야 할 리뷰 목록 -->
	<select id="getAdminReviewList" resultMap="ReviewMap">
		select review_no, gds_no, user_no, review_reg_date
		from review_tb
		where review_no
			not in (
				select a.review_no
				from review_tb a
				join review_tb b
				where a.review_no=b.review_ref)
		and review_ref is null
	</select>		
		
		
</mapper>    